<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="21588" started-at="2022-03-16T06:31:07 UTC" finished-at="2022-03-16T06:31:29 UTC">
    <groups>
    </groups>
    <test name="Test" duration-ms="21588" started-at="2022-03-16T06:31:07 UTC" finished-at="2022-03-16T06:31:29 UTC">
      <class name="testcases.LoginTest">
        <test-method status="PASS" signature="DataSetUP()[pri:0, instance:testcases.LoginTest@42eca56e]" name="DataSetUP" is-config="true" duration-ms="888" started-at="2022-03-16T06:31:07 UTC" finished-at="2022-03-16T06:31:08 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataSetUP -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@42eca56e]" name="SetUp" is-config="true" duration-ms="2390" started-at="2022-03-16T06:31:08 UTC" finished-at="2022-03-16T06:31:11 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.externaldatatest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="externaldatatest()[pri:0, instance:testcases.LoginTest@42eca56e]" name="externaldatatest" duration-ms="2813" started-at="2022-03-16T06:31:11 UTC" finished-at="2022-03-16T06:31:14 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- externaldatatest -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testcases.LoginTest@42eca56e]" name="TearDown" is-config="true" duration-ms="79" started-at="2022-03-16T06:31:14 UTC" finished-at="2022-03-16T06:31:14 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@42eca56e]" name="SetUp" is-config="true" duration-ms="1448" started-at="2022-03-16T06:31:14 UTC" finished-at="2022-03-16T06:31:15 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.loginfailure()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="FAIL" signature="loginfailure()[pri:0, instance:testcases.LoginTest@42eca56e]" name="loginfailure" duration-ms="2408" started-at="2022-03-16T06:31:15 UTC" finished-at="2022-03-16T06:31:17 UTC">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot determine loading status
from disconnected: Unable to receive message from renderer
  (Session info: chrome=83.0.4103.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ip-172-31-17-139', ip: '172.31.17.139', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-1113-aws', java.version: '1.8.0_265'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.p7Sryp}, goog:chromeOptions: {debuggerAddress: localhost:34071}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e5f51f9d2b1d6294e61898f418df2ad0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from disconnected: Unable to receive message from renderer
  (Session info: chrome=83.0.4103.97)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ip-172-31-17-139', ip: '172.31.17.139', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-1113-aws', java.version: '1.8.0_265'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: /tmp/.com.google.Chrome.p7Sryp}, goog:chromeOptions: {debuggerAddress: localhost:34071}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e5f51f9d2b1d6294e61898f418df2ad0
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy12.click(Unknown Source)
at pages.LoginPage.Loginfunction(LoginPage.java:68)
at testcases.LoginTest.loginfailure(LoginTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginfailure -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testcases.LoginTest@42eca56e]" name="TearDown" is-config="true" duration-ms="72" started-at="2022-03-16T06:31:17 UTC" finished-at="2022-03-16T06:31:18 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@42eca56e]" name="SetUp" is-config="true" duration-ms="1360" started-at="2022-03-16T06:31:18 UTC" finished-at="2022-03-16T06:31:19 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.loginsuccess()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="loginsuccess()[pri:0, instance:testcases.LoginTest@42eca56e]" name="loginsuccess" duration-ms="5316" started-at="2022-03-16T06:31:19 UTC" finished-at="2022-03-16T06:31:24 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginsuccess -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testcases.LoginTest@42eca56e]" name="TearDown" is-config="true" duration-ms="85" started-at="2022-03-16T06:31:24 UTC" finished-at="2022-03-16T06:31:24 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@42eca56e]" name="SetUp" is-config="true" duration-ms="1415" started-at="2022-03-16T06:31:24 UTC" finished-at="2022-03-16T06:31:26 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.parameterized(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="parameterized(java.lang.String,java.lang.String)[pri:0, instance:testcases.LoginTest@42eca56e]" name="parameterized" duration-ms="2928" started-at="2022-03-16T06:31:26 UTC" finished-at="2022-03-16T06:31:29 UTC">
          <params>
            <param index="0">
              <value>
                <![CDATA[creatorshashikiran@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Reset@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterized -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testcases.LoginTest@42eca56e]" name="TearDown" is-config="true" duration-ms="76" started-at="2022-03-16T06:31:29 UTC" finished-at="2022-03-16T06:31:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="DataTearDown()[pri:0, instance:testcases.LoginTest@42eca56e]" name="DataTearDown" is-config="true" duration-ms="263" started-at="2022-03-16T06:31:29 UTC" finished-at="2022-03-16T06:31:29 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataTearDown -->
      </class> <!-- testcases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
